
name: Release

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    environment: OSSBUILD

    steps:
    - uses: actions/checkout@v3
      name: Check out

    - name: Override DNS for Sonatype repo
      run: |
        mkdir -p ~/.m2/
        touch ~/.m2/settings.xml 
        echo " <settings> <mirrors> <mirror> <id>centralhttps</id> <mirrorOf>central</mirrorOf> <name>Maven central https</name> <url>https://repo1.maven.org/maven2/</url> </mirror> </mirrors></settings>" >> ~/.m2/settings.xml 

    - name: Get Maven project version
      run: |
        echo "project_version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.1.0:exec  --file pom.xml)" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven (Java 8)
      run: mvn -B package --file pom.xml

    - name: List target directory
      run: ls -l target

    - name: create jt400 pseudo-directory
      run: sudo mkdir -p /QIBM/ProdData/OS400/jt400/lib/
    - name: change ownership of jt400 psudo-directory
      run: sudo chown $USER /QIBM/ProdData/OS400/jt400/lib/
    - name: fetch jt400.jar
      run: sudo curl https://repo1.maven.org/maven2/net/sf/jt400/jt400/10.7/jt400-10.7.jar -o /QIBM/ProdData/OS400/jt400/lib/jt400.jar
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: create staging directory
      run: |
        mkdir -p staging/opt/mapepire/lib/mapepire/
        mkdir -p staging/opt/mapepire/bin/
    - name: Populate staging directory
      run: |
        mv scripts/mapepire-start.sh staging/opt/mapepire/bin/mapepire
        mv target/mapepire-server-${{ env.project_version }}-jar-with-dependencies.jar staging/opt/mapepire/lib/mapepire/mapepire-server.jar
        mv service-commander-def.yaml staging/opt/mapepire/lib/mapepire/mapepire.yaml

    - name: Create distribution .zip
      run: |
        pushd staging/opt/mapepire
        zip -r ../../../mapepire-server-${{ env.project_version }}.zip bin lib
        popd

    - name: Create the tag and release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.project_version }}
        name: v${{ env.project_version }}
        files: mapepire-server-${{ env.project_version }}.zip

    - name: Install NPM Dependencies
      run: npm i -g @ibm/ibmi-ci

    - name: Deploy Server to IBM i
      run: | 
        ici \
          --rcwd "/home/${{ secrets.IBMI_USER }}" \
          --cmd "mkdir -p /opt/download" \
          --rcwd "/opt/download" \
          --cmd "rm -f mapepire-server-dist.zip" \
          --cmd "wget -O mapepire-server-dist.zip https://github.com/Mapepire-IBMi/mapepire-server/releases/download/v${{ env.project_version }}/mapepire-server-${{ env.project_version }}.zip" \
          --cmd "mkdir -p /opt/mapepire" \
          --rcwd "/opt/mapepire" \
          --cmd "jar xvf /opt/download/mapepire-server-dist.zip" \
          --cmd "chown -R qsys ." \
          --rcwd "/opt/mapepire/lib/mapepire" \
          --ignore --cmd "sc check mapepire.yaml" \
          --ignore --cmd "sc stop mapepire.yaml" \
          --cmd "sc start mapepire.yaml" \
      env:
        IBMI_HOST: ${{ secrets.IBMI_HOST }}
        IBMI_USER: ${{ secrets.IBMI_USER }}
        IBMI_PASSWORD: ${{ secrets.IBMI_PASSWORD }}
        IBMI_SSH_PORT: ${{ secrets.IBMI_SSH_PORT }}